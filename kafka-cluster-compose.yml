# docker swarm init 
# docker swarm join-token manager
# docker swarm join-token worker
# docker swarm leave 3q5y8mi0vwd77tp0cmpbtcii0 [node id]
# docker node update --label-add node1=kafka1 olip8tm3mqn7mxg4e875xbwfe [Node id]
# docker node update --label-add node2=kafka2 olip8tm3mqn7mxg4e875xbwbn [Node id]
# docker node update --label-add node3=kafka3 olip8tm3mqn7mxg4e875xbwgh [Node id]

version: '3.9'
services:

  zk1:
    hostname: zk1
    image: bitnami/zookeeper:latest
    ports:
      - '12181:2181'
      - '12888:2888'
      - '13888:3888'
    deploy:
      mode: replicated
      replicas: 1
      placement:
         constraints:
           - node.labels.node1 == kafka1
    extra_hosts:
      kafka1: 192.168.35.52
      kafka2: 192.168.35.72
      kafka3: 192.168.35.85
      zk1: 192.168.35.52
      zk2: 192.168.35.72
      zk3: 192.168.35.85
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=0.0.0.0:2888:3888,zk2:22888:23888,zk3:32888:33888
    volumes:
      - /opt/kafka-cluster/zookeeper_data1:/bitnami/zookeeper/data/

  zk2:
    hostname: zk2
    image: bitnami/zookeeper:latest
    ports:
      - '22181:2181'
      - '22888:2888'
      - '23888:3888'
    deploy:
      mode: replicated
      replicas: 1
      placement:
         constraints:
           - node.labels.node2 == kafka2
    extra_hosts:
      kafka1: 192.168.35.52
      kafka2: 192.168.35.72
      kafka3: 192.168.35.85
      zk1: 192.168.35.52
      zk2: 192.168.35.72
      zk3: 192.168.35.85
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=2
      - ZOO_SERVERS=zk1:12888:13888,0.0.0.0:2888:3888,zk3:32888:33888
    volumes:
      - /opt/kafka-cluster/zookeeper_data2:/bitnami/zookeeper/data

  zk3:
    hostname: zk3
    image: bitnami/zookeeper:latest
    ports:
      - '32181:2181'
      - '32888:2888'
      - '33888:3888'
    deploy:
      mode: replicated
      replicas: 1
      placement:
         constraints:
           - node.labels.node3 == kafka3
    extra_hosts:
      kafka1: 192.168.35.52
      kafka2: 192.168.35.72
      kafka3: 192.168.35.85
      zk1: 192.168.35.52
      zk2: 192.168.35.72
      zk3: 192.168.35.85
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=3
      - ZOO_SERVERS=zk1:12888:13888,zk2:22888:23888,0.0.0.0:2888:3888
    volumes:
      - /opt/kafka-cluster/zookeeper_data3:/bitnami/zookeeper/data/


  kafka1:
    image: wurstmeister/kafka
    hostname: kafka1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/kafka-cluster/kafka_data1:/kafka
      - /etc/localtime:/etc/localtime:ro
    deploy:
      resources:
        limits:
          cpus: '3'
      mode: replicated
      replicas: 1
      placement:
         constraints:
          - node.labels.node1 == kafka1
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2181,zk3:2181/kafka"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://kafka1:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: OUTSIDE
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_DIRS: /kafka/data
      KAFKA_NUM_PARTITIONS: 9
      KAFKA_RECOVERY_THREADS_PER_DATA_DIR: 3
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 3
    logging:
       driver: "json-file"
       options:
          max-size: "200k"
          max-file: "10"
    healthcheck:
      test: ["CMD", "bash", "-c", "unset" , "JMX_PORT" ,";" ,"kafka-topics.sh","--zookeeper","zk1:21811","--list"]
      interval: 30s
      timeout: 10s
      retries: 3


  kafka2:
    image: wurstmeister/kafka
    hostname: kafka2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/kafka-cluster/kafka_data2:/kafka
      - /etc/localtime:/etc/localtime:ro
    deploy:
      resources:
        limits:
          cpus: '3'
      mode: replicated
      replicas: 1
      placement:
         constraints:
          - node.labels.node2 == kafka2
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2181,zk3:2181/kafka"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://kafka2:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: OUTSIDE
      KAFKA_BROKER_ID: 2
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_DIRS: /kafka/data
      KAFKA_NUM_PARTITIONS: 9
      KAFKA_RECOVERY_THREADS_PER_DATA_DIR: 3
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 3
    logging:
       driver: "json-file"
       options:
          max-size: "200k"
          max-file: "10"
    healthcheck:
      test: ["CMD", "bash", "-c", "unset" , "JMX_PORT" ,";" ,"kafka-topics.sh","--zookeeper","zk2:21812","--list"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka3:
    image: wurstmeister/kafka
    hostname: kafka3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/kafka-cluster/kafka_data3:/kafka
      - /etc/localtime:/etc/localtime:ro
    deploy:
      resources:
        limits:
          cpus: '3'
      mode: replicated
      replicas: 1
      placement:
         constraints:
          - node.labels.node3 == kafka3
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2181,zk3:2181/kafka"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://kafka3:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: OUTSIDE
      KAFKA_BROKER_ID: 3
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_DIRS: /kafka/data
      KAFKA_NUM_PARTITIONS: 9
      KAFKA_RECOVERY_THREADS_PER_DATA_DIR: 3
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 3

    logging:
       driver: "json-file"
       options:
          max-size: "200k"
          max-file: "10"
    healthcheck:
      test: ["CMD", "bash", "-c", "unset" , "JMX_PORT" ,";" ,"kafka-topics.sh","--zookeeper","zk3:21813","--list"]
      interval: 30s
      timeout: 10s
      retries: 3
