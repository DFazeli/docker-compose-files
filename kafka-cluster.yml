[root@lct-elk elk]# cat kafka-cluster-docker-compose.yml 
version: '3.9'
services:

  zk1:
    container_name: zk1
    hostname: zk1
    image: bitnami/zookeeper:latest
    ports:
      - 21811:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=0.0.0.0:2888:3888,zk2:2888:3888,zk3:2888:3888
    volumes:
      - /zookeeper_data1:/bitnami/zookeeper/data/
  zk2:
    container_name: zk2
    hostname: zk2
    image: bitnami/zookeeper:latest
    ports:
      - 21812:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=2
      - ZOO_SERVERS=zk1:2888:3888,0.0.0.0:2888:3888,zk3:2888:3888
    volumes:
      - /zookeeper_data2:/bitnami/zookeeper/data
  zk3:
    container_name: zk3
    hostname: zk3
    image: bitnami/zookeeper:latest
    ports:
      - 21813:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=3
      - ZOO_SERVERS=zk1:2888:3888,zk2:2888:3888,0.0.0.0:2888:3888
    volumes:
      - /zookeeper_data3:/bitnami/zookeeper/data/


  kafka1:
    container_name: kafka1
    image: wurstmeister/kafka
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /kafka_data1:/kafka
      - /etc/localtime:/etc/localtime:ro
      - /etc/hosts:/etc/hosts
    deploy:
      resources:
        limits:
          cpus: 6
    ports:
      - "9091:9092"
      - "1099:1099"
      - "19092:19092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://kafka1:9092, OUT://kafka1:19092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka1:9092, OUT://kafka1:19092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,OUT:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "OUT"
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2181,zk3:2181/kafka"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka1 -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: 1099
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_DIRS: /kafka/data
      KAFKA_NUM_PARTITIONS: 12
      KAFKA_RECOVERY_THREADS_PER_DATA_DIR: 12
      KAFKA_NETWORK_THREADS: 12
      KAFKA_IO_THREADS: 12

    logging:
       driver: "json-file"
       options:
          max-size: "200k"
          max-file: "10"
    healthcheck:
      test: ["CMD", "bash", "-c", "unset" , "JMX_PORT" ,";" ,"kafka-topics.sh","--zookeeper","zk1:21811","--list"]
      interval: 30s
      timeout: 10s
      retries: 3


  kafka2:
    container_name: kafka2
    image: wurstmeister/kafka
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /kafka_data2:/kafka
      - /etc/localtime:/etc/localtime:ro
      - /etc/hosts:/etc/hosts
    deploy:
      resources:
        limits:
          cpus: 6
    ports:
      - "9092:9092"
      - "2099:1099"
      - "29092:29092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://kafka2:9092, OUT://kafka2:29092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka2:9092, OUT://kafka2:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,OUT:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "OUT"
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2181,zk3:2181/kafka"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka2 -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: 1099
      KAFKA_BROKER_ID: 2
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_DIRS: /kafka/data
      KAFKA_NUM_PARTITIONS: 12
      KAFKA_RECOVERY_THREADS_PER_DATA_DIR: 12
      KAFKA_NETWORK_THREADS: 12
      KAFKA_IO_THREADS: 12
    logging:
       driver: "json-file"
       options:
          max-size: "200k"
          max-file: "10"
    healthcheck:
      test: ["CMD", "bash", "-c", "unset" , "JMX_PORT" ,";" ,"kafka-topics.sh","--zookeeper","zk2:21812","--list"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka3:
    container_name: kafka3
    image: wurstmeister/kafka
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /kafka_data3:/kafka
      - /etc/localtime:/etc/localtime:ro
      - /etc/hosts:/etc/hosts
    deploy:
      resources:
        limits:
          cpus: 6
    ports:
      - "9093:9092"
      - "3099:1099"
      - "39092:39092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://kafka3:9092, OUT://kafka3:39092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka3:9092, OUT://kafka3:39092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,OUT:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "OUT"
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2181,zk3:2181/kafka"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka3 -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: 1099
      KAFKA_BROKER_ID: 3
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_DIRS: /kafka/data
      KAFKA_NUM_PARTITIONS: 12
      KAFKA_RECOVERY_THREADS_PER_DATA_DIR: 12
      KAFKA_NETWORK_THREADS: 12
      KAFKA_IO_THREADS: 12
    logging:
       driver: "json-file"
       options:
          max-size: "200k"
          max-file: "10"
    healthcheck:
      test: ["CMD", "bash", "-c", "unset" , "JMX_PORT" ,";" ,"kafka-topics.sh","--zookeeper","zk3:21813","--list"]
      interval: 30s
      timeout: 10s
      retries: 3

#volumes:
#  zookeeper_data1:
#      name: zookeeper_data1
#      driver: local
#      driver_opts:
#        type: 'none'
#        o: 'bind'
#        device: '/zookeeper_data1'
#
#  zookeeper_data2:
#      name: zookeeper_data2
#      driver: local
#      driver_opts:
#        type: 'none'
#        o: 'bind'
#        device: '/zookeeper_data2'
#
#  zookeeper_data3:
#      name: zookeeper_data3
#      driver: local
#      driver_opts:
#        type: 'none'
#        o: 'bind'
#        device: '/zookeeper_data3'
#
#  zookeeper_log1:
#      name: zookeeper_log1
#      driver: local
#      driver_opts:
#        type: 'none'
#        o: 'bind'
#        device: '/zookeeper_log1'
#
#  zookeeper_log2:
#      name: zookeeper_log2
#      driver: local
#      driver_opts:
#        type: 'none'
#        o: 'bind'
#        device: '/zookeeper_log2'
#
#  zookeeper_log3:
#      name: zookeeper_log3
#      driver: local
#      driver_opts:
#        type: 'none'
#        o: 'bind'
#        device: '/zookeeper_log3'
#
#
#
#  kafka_data1:
#     name: kafka_data1
#     driver: local
#     driver_opts:
#       type: 'none'
#       o: 'bind'
#       device: '/kafka_data1'
#
#  kafka_data2:
#     name: kafka_data2
#     driver: local
#     driver_opts:
#       type: 'none'
#       o: 'bind'
#       device: '/kafka_data2'
#
#  kafka_data3:
#     name: kafka_data3
#     driver: local
#     driver_opts:
#       type: 'none'
#       o: 'bind'
#       device: '/kafka_data3'
#
#  kafka_node1:
#     name: kafka_node1
#     driver: local
#     driver_opts:
#       type: 'none'
#       o: 'bind'
#       device: '/kafka_node1'
#
#
#
#  kafka_node2:
#     name: kafka_node2
#     driver: local
#     driver_opts:
#       type: 'none'
#       o: 'bind'
#       device: '/kafka_node2'
#
#
#  kafka_node3:
#     name: kafka_node3
#     driver: local
#     driver_opts:
#       type: 'none'
#       o: 'bind'
#       device: '/kafka_node3'
